import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'
import { useWeb3React } from "@web3-react/core"
import { injected } from "../utils/connector"
import * as TruffleContract from "truffle-contract";
import React, { useRef, useState } from 'react'

import {Key, Tx} from "../model/key";
import KeyGame from "../model/keyGame";
import { useMetaMask } from "metamask-react";
const KeyGameContract = TruffleContract(require("../build/contracts/KeyGame.json"));

export default function Home() {
  let current = useRef(0);

  const { status, connect, account, chainId, ethereum } = useMetaMask();

  async function getInstance() {
    KeyGameContract.setProvider(ethereum);
    let instance: KeyGame;
    instance = await KeyGameContract.deployed();
    // instance.methods.generateKey().call().then((balance: any) => {
    //   console.log(balance);
    // });
    instance.getHistory().then((result: Key[]) => {
      console.log(result);
    });
  }

  async function buyKey() {
    KeyGameContract.setProvider(ethereum);
    let instance = await KeyGameContract.deployed();
    // instance.buyKey().sendTransaction({from: account, value: "10000000000000000" }).then((result: any) => {
    //   console.log(result);
    // });
    instance.buyKey({from: account, value: 10000000000000000, gas: 1000000}).then((result: Tx) => {
      console.log(result.receipt.blockHash);
    });
  }

  console.log(account);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <button onClick={account ? ()=>{} : connect}>{account ? "Disconnect" : "Connect"}</button>
        <button onClick={getInstance}>Get Instance</button>
        <button onClick={buyKey}>Buy Key</button>
      </main>
    </>
  )
}
